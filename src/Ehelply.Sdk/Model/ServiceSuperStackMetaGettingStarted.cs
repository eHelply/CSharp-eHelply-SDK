/*
 * eHelply SDK - 1.1.117
 *
 * eHelply SDK for SuperStack Services
 *
 * The version of the OpenAPI document: 1.1.117
 * Contact: support@ehelply.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Ehelply.Sdk.Client.OpenAPIDateConverter;

namespace Ehelply.Sdk.Model
{
    /// <summary>
    /// ServiceSuperStackMetaGettingStarted
    /// </summary>
    [DataContract(Name = "ServiceSuperStackMetaGettingStarted")]
    public partial class ServiceSuperStackMetaGettingStarted : IEquatable<ServiceSuperStackMetaGettingStarted>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceSuperStackMetaGettingStarted" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServiceSuperStackMetaGettingStarted() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceSuperStackMetaGettingStarted" /> class.
        /// </summary>
        /// <param name="blurb">blurb (required).</param>
        /// <param name="endpointTeasers">endpointTeasers (required).</param>
        public ServiceSuperStackMetaGettingStarted(string blurb = default(string), List<ServiceSuperStackMetaGettingStartedEndpointTeaser> endpointTeasers = default(List<ServiceSuperStackMetaGettingStartedEndpointTeaser>))
        {
            // to ensure "blurb" is required (not null)
            if (blurb == null)
            {
                throw new ArgumentNullException("blurb is a required property for ServiceSuperStackMetaGettingStarted and cannot be null");
            }
            this.Blurb = blurb;
            // to ensure "endpointTeasers" is required (not null)
            if (endpointTeasers == null)
            {
                throw new ArgumentNullException("endpointTeasers is a required property for ServiceSuperStackMetaGettingStarted and cannot be null");
            }
            this.EndpointTeasers = endpointTeasers;
        }

        /// <summary>
        /// Gets or Sets Blurb
        /// </summary>
        [DataMember(Name = "blurb", IsRequired = true, EmitDefaultValue = false)]
        public string Blurb { get; set; }

        /// <summary>
        /// Gets or Sets EndpointTeasers
        /// </summary>
        [DataMember(Name = "endpoint_teasers", IsRequired = true, EmitDefaultValue = false)]
        public List<ServiceSuperStackMetaGettingStartedEndpointTeaser> EndpointTeasers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceSuperStackMetaGettingStarted {\n");
            sb.Append("  Blurb: ").Append(Blurb).Append("\n");
            sb.Append("  EndpointTeasers: ").Append(EndpointTeasers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ServiceSuperStackMetaGettingStarted);
        }

        /// <summary>
        /// Returns true if ServiceSuperStackMetaGettingStarted instances are equal
        /// </summary>
        /// <param name="input">Instance of ServiceSuperStackMetaGettingStarted to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ServiceSuperStackMetaGettingStarted input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Blurb == input.Blurb ||
                    (this.Blurb != null &&
                    this.Blurb.Equals(input.Blurb))
                ) && 
                (
                    this.EndpointTeasers == input.EndpointTeasers ||
                    this.EndpointTeasers != null &&
                    input.EndpointTeasers != null &&
                    this.EndpointTeasers.SequenceEqual(input.EndpointTeasers)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Blurb != null)
                {
                    hashCode = (hashCode * 59) + this.Blurb.GetHashCode();
                }
                if (this.EndpointTeasers != null)
                {
                    hashCode = (hashCode * 59) + this.EndpointTeasers.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
