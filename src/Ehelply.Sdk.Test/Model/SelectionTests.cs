/*
 * eHelply SDK - 1.1.105
 *
 * eHelply SDK for SuperStack Services
 *
 * The version of the OpenAPI document: 1.1.105
 * Contact: support@ehelply.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ehelply.Sdk.Api;
using Ehelply.Sdk.Model;
using Ehelply.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ehelply.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing Selection
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SelectionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Selection
        //private Selection instance;

        public SelectionTests()
        {
            // TODO uncomment below to create an instance of Selection
            //instance = new Selection();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Selection
        /// </summary>
        [Fact]
        public void SelectionInstanceTest()
        {
            // TODO uncomment below to test "IsType" Selection
            //Assert.IsType<Selection>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Fact]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }
        /// <summary>
        /// Test the property 'Icon'
        /// </summary>
        [Fact]
        public void IconTest()
        {
            // TODO unit test for the property 'Icon'
        }

    }

}
